trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'cfdd35f5-fd2e-4be9-8348-0fe75f21a534'
  imageRepository: 'pythonrepo'
  containerRegistry: 'himaacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)


    - task: Docker@2
      inputs:
          containerRegistry: 'acravcconn'
          repository: 'sqlrepo'
          command: 'buildAndPush'
          Dockerfile: '**/sqlimage/Dockerfile'
          tags: $(tag)
      
    - task: PublishPipelineArtifact@1
      inputs:
          targetPath: '$(Pipeline.Workspace)/s/manifests'
          artifact: 'manifests'
          publishLocation: 'pipeline'
      
      

- stage: DeploytoAKS
  dependsOn: Build
  jobs:
    - job: Deploytokubernetescluster
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'manifests'
          targetPath: '$(Pipeline.Workspace)/manifests'
      
      - task: KubectlInstaller@0
        inputs:
          kubectlVersion: 'latest'

      - task: Kubernetes@1
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: 'akssvcconn'
          command: 'login'
          
      - task: KubernetesManifest@1
        inputs:
          action: 'deploy'
          connectionType: 'kubernetesServiceConnection'
          kubernetesServiceConnection: 'akssvcconn'
          manifests: |
           $(Pipeline.Workspace)/manifests/mysql-new.yml
           $(Pipeline.Workspace)/manifests/mysql-service.yml
          containers: 'himaacr.azurecr.io/sqlrepo:$(tag)'
        
      
      - task: Kubernetes@1
        inputs:
         connectionType: 'Kubernetes Service Connection'
         kubernetesServiceEndpoint: 'akssvcconn'
      - bash: |
         kubectl get pod
         CLUSTER_IP=$(kubectl get svc mysql-service -o jsonpath='{.spec.clusterIP}')
         kubectl apply -f manifests/python-new.yml
         kubectl set image deployment/flask flask-container=himaacr.azurecr.io/pythonrepo:$(tag)
         kubectl set env deployment/flask MYSQL_HOST=$CLUSTER_IP
         kubectl apply -f manifests/flask-service.yml
     
 

      
        

            
            

        

          
